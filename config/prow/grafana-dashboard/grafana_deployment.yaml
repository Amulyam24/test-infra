apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: grafana-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - image: grafana/grafana:7.1.0
          name: grafana
          envFrom:
            - secretRef:
                name: grafana-config
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
              readOnly: false
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: true
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboards
              readOnly: false
            - mountPath: /etc/grafana/provisioning/dashboards/grafana-dashboard-provider.yaml
              name: grafana-dashboard-provider
              readOnly: true
              subPath: grafana-dashboard-provider.yaml
      volumes:
        - emptyDir: {}
          name: grafana-storage
        - name: grafana-datasources
          secret:
            secretName: grafana-datasources
        - configMap:
            name: grafana-dashboards
          name: grafana-dashboards
        - configMap:
            name: grafana-dashboard-provider
          name: grafana-dashboard-provider
